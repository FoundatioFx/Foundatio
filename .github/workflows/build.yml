name: Build
on: [push, pull_request]
env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Build Reason
      run: "echo ref: ${{github.ref}} event: ${{github.event_name}}"
    - name: Build Version
      id: version
      uses: thefringeninja/action-minver@2.0.0-preview1
      with:
        tag-prefix: v
    - name: Build
      run: dotnet build Foundatio.sln --configuration Release
    - name: Run Tests
      run: dotnet test Foundatio.sln --configuration Release --results-directory artifacts --no-build --logger:trx
    - name: Package
      if: github.event_name != 'pull_request'
      run: dotnet pack Foundatio.sln --configuration Release --no-build
    - name: Publish CI Packages
      if: github.event_name != 'pull_request'
      run: |
        for package in $(find -name "*.nupkg" | grep "minver" -v); do
          echo "${0##*/}": Pushing $package...
          
          # GPR
          # workaround for GPR push issue
          curl -sX PUT -u "foundatiofx:${{ secrets.GITHUB_TOKEN }}" -F package=@$package https://nuget.pkg.github.com/foundatiofx/

          # feedz (remove once GPR supports anonymous access)
          dotnet nuget push $package --source https://f.feedz.io/foundatio/foundatio/nuget --api-key ${{ secrets.FEEDZ_KEY }} --skip-duplicate
        done
    - name: Publish Release Packages
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        for package in $(find -name "*.nupkg" | grep "minver" -v); do
          echo "${0##*/}": Pushing $package...
          dotnet nuget push $package --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_KEY }} --skip-duplicate
        done
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: artifacts
        path: artifacts
