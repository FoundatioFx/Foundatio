name: Build
on:
  workflow_call:
    inputs:
      solution:
        description: 'The solution to build'
        default: ''
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Build Reason
      run: "echo ref: ${{github.ref}} event: ${{github.event_name}}"
    - name: Build Version
      run: |
        dotnet tool install --global minver-cli --version 4.0.0
        version=$(minver --tag-prefix v)
        echo "MINVERVERSIONOVERRIDE=$version" >> $GITHUB_ENV
    - name: Build
      run: dotnet build ${{ inputs.solution }} --configuration Release
    - name: Start Services
      if: hashFiles('docker-compose.yml') != ''
      run: docker compose up -d && docker compose up ready || true
    - name: Run Tests
      run: dotnet test ${{ inputs.solution }} --configuration Release --no-build --logger GitHubActions
    - name: Package
      if: github.event_name != 'pull_request'
      run: dotnet pack ${{ inputs.solution }} --configuration Release --no-build
    - name: Publish CI Packages
      if: github.event_name != 'pull_request'
      run: |
        for package in $(find -name "*.nupkg" | grep "minver" -v); do
          echo "${0##*/}": Pushing $package...
          
          # GitHub
          dotnet nuget push $package --source https://nuget.pkg.github.com/foundatiofx/index.json --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
          
          # Feedz (remove once GitHub supports anonymous access)
          dotnet nuget push $package --source https://f.feedz.io/foundatio/foundatio/nuget --api-key ${{ secrets.FEEDZ_KEY }} --skip-duplicate
        done
    - name: Publish Release Packages
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        for package in $(find -name "*.nupkg" | grep "minver" -v); do
          echo "${0##*/}": Pushing $package...
          dotnet nuget push $package --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_KEY }} --skip-duplicate
        done
